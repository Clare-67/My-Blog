---
import { SOCIALS } from "@/constants";
import LinkButton from "./LinkButton.astro";
import ImageModal from "./ImageModal.astro";

export interface Props {
  centered?: boolean;
}

const { centered = false } = Astro.props;
---

<div class:list={["flex-wrap justify-center gap-1", { flex: centered }]}>
  {
    SOCIALS.map(social => {
      const isQrCode = social.name === "QQ" || social.name === "WeChat";
      if (isQrCode) {
        return (
          <button
            class="group qr-code-btn cursor-pointer p-2 hover:rotate-6 sm:p-1"
            title={social.linkTitle}
            data-qr-src={social.href}
          >
            <social.icon class="inline-block size-6 scale-125 fill-transparent stroke-current stroke-2 opacity-90 group-hover:fill-transparent sm:scale-110" />
            <span class="sr-only">{social.linkTitle}</span>
          </button>
        );
      }
      return (
        <LinkButton
          href={social.href}
          class="p-2 hover:rotate-6 sm:p-1"
          title={social.linkTitle}
        >
          <social.icon class="inline-block size-6 scale-125 fill-transparent stroke-current stroke-2 opacity-90 group-hover:fill-transparent sm:scale-110" />
          <span class="sr-only">{social.linkTitle}</span>
        </LinkButton>
      );
    })
  }
</div>

<ImageModal />

<script>
  function setupModal() {
    const modal = document.getElementById("image-modal");
    const modalImage = document.getElementById(
      "modal-image"
    ) as HTMLImageElement;
    const closeBtn = document.getElementById("modal-close-btn");
    const qrCodeBtns = document.querySelectorAll(".qr-code-btn");

    if (!modal || !modalImage || !closeBtn) return;

    const openModal = (imageUrl: string) => {
      modalImage.src = imageUrl;
      modal.classList.remove("hidden");
      modal.classList.add("flex");
    };

    const closeModal = () => {
      modal.classList.add("hidden");
      modal.classList.remove("flex");
      modalImage.src = "";
    };

    qrCodeBtns.forEach(btn => {
      btn.addEventListener("click", () => {
        const imageUrl = btn.getAttribute("data-qr-src");
        if (imageUrl) {
          openModal(imageUrl);
        }
      });
    });

    closeBtn.addEventListener("click", closeModal);
    modal.addEventListener("click", e => {
      if (e.target === modal) closeModal();
    });
    document.addEventListener("keydown", e => {
      if (e.key === "Escape" && !modal.classList.contains("hidden")) {
        closeModal();
      }
    });
  }

  document.addEventListener("astro:page-load", setupModal);
</script>
